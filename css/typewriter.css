:root {
  --typewriter-length: 18; /* This has to be the same length a number of characters (including spaces) in the world */
  --typerwriter-indicator-speed: 800ms; /* How quickly the bar blinks */
  --typerwriter-type-speed: 10000ms; /* The total speed of the animation */
  --typewriter-delay: 0ms; /* Delay before the first time the animation is run */
}

.typewriter {
  --clr-type-bg: black;
  background-color: black;
  background-image: url(https://source.unsplash.com/800x800/?typewriter);
  background-position: center;
  background-size: cover;
}

.typewriter__title {
  position: static;
  text-align: center;
  margin-bottom: 15vh;
}

.typewriter__wrapper {
  position: relative;
  background-color: var(--clr-type-bg);
  padding: max(1em, 5vh) max(1em, 10vw);
  border: white solid 0.4rem;
  /* outline: var(--clr-type-bg) solid 0.2rem; */
  min-width: 50%;
}

.typewriter__text {
  font-size: 1.5em;
  color: white;
  position: relative;
  font-family: monospace;
  overflow: hidden;
  margin-bottom: 3em;
}

.typewriter__text::before,
.typewriter__text::after {
  content: "";
  position: absolute;
  display: block;
  height: 100%;
  width: calc(var(--typewriter-length) * 1ch);
  top: 0;
  left: 0;

  /* the steps-function creates the effect of moving the animation is descrete steps */
  animation: typewriter-type var(--typerwriter-type-speed)
    steps(var(--typewriter-length), end) infinite alternate
    var(--typewriter-delay);
}

.typewriter__text::before {
  left: 0;
  border-left: 2px solid white;
  z-index: 10;
  animation: typewriter-indicator linear infinite
      var(--typerwriter-indicator-speed),
    typewriter-type var(--typerwriter-type-speed)
      steps(var(--typewriter-length), end) infinite alternate
      var(--typewriter-delay);
}

.typewriter__text::after {
  background-color: var(--clr-type-bg);
}

@keyframes typewriter-indicator {
  to {
    opacity: 0;
  }
}

@keyframes typewriter-type {
  /* The animation is only running between 25% and 75%, the rest of the time it is paused. This does not affect the amounts of steps*/
  0%,
  25% {
    transform: translateX(0);
  }
  75%,
  100% {
    transform: translateX(calc(var(--typewriter-length) * 1ch));
  }
}

/* Scaling the background image on larger screens */
@media screen and (min-width: 800px) {
  /* 1920x1200 */
  .typewriter {
    background-image: url(https://source.unsplash.com/1920x1200/?typewriter);
  }
}

@media screen and (min-width: 1920px) {
  /* 3840x2160 */
  .typewriter {
    background-image: url(https://source.unsplash.com/3840x2160/?typewriter);
  }
}

/* Clock */
.clock {
  --clr-clock-bg: rgb(0, 0, 0);
  --clr-clock-face: rgb(255, 255, 255);
  position: absolute;
  height: 10em;
  width: 10em;
  background-color: var(--clr-clock-bg);
  color: var(--clr-clock-face);
  border: 0.2em var(--clr-clock-face) solid;
  border-radius: 50%;
  display: grid;
  place-items: center;
  right: -4.5em;
  bottom: -4.5em;
  font-size: 0.8rem;
}

/* Face of the clock */
.clock__num {
  position: absolute;
  width: 1em;
  height: 1em;
}

.clock__12 {
  transform: rotate(0deg);
}

.clock__3 {
  transform: rotate(90deg);
}

.clock__6 {
  transform: rotate(180deg);
}

.clock__9 {
  transform: rotate(-90deg);
}

.clock__num::after,
.clock__num::before {
  position: absolute;
  display: block;
  width: 0.125em;
  height: 0.5em;
  left: 50%;
  background-color: var(--clr-clock-face);
  content: "";
}

.clock__num::before {
  right: 0;
  top: 0;
  transform: rotate(-30deg) translateY(-4em);
}

.clock__num::after {
  right: 0;
  top: 0;
  transform: rotate(30deg) translateY(-4em);
}

.clock__num span {
  position: absolute;
  left: calc(50% - 0.5ch);
  display: block;
}

.clock__12 span {
  left: calc(50% - 1ch);
  transform: translateY(-4.2em) rotate(0deg);
}

.clock__3 span {
  transform: translateY(-4.2em) rotate(-90deg);
}

.clock__6 span {
  transform: translateY(-4.2em) rotate(-180deg);
}

.clock__9 span {
  transform: translateY(-4.2em) rotate(90deg);
}

/* Arms of the clock */

.clock__arms {
  position: relative;
  /* This was easier than chaning the starting position of the arms */
  transform: rotate(180deg);
}

.clock__arms::before,
.clock__arms::after {
  content: "";
  position: absolute;
  display: block;
  background-color: var(--clr-clock-face);
}

/* Hour arm - sped up so that one hour takes 60 seconds */
.clock__arms::before {
  left: calc(50% - 0.125em);
  width: 0.25em;
  height: 2.25em;
  /* transform-origin is used to make sure that the arms are rotated around middle of the top*/
  transform-origin: 50% 0;
  animation: clock 720s steps(720, end) infinite;
}

/* Minute arm - sped up so that one minute takes one second */
.clock__arms::after {
  left: calc(50% - 0.0625em);
  width: 0.125em;
  height: 3.5em;
  transform-origin: 50% 0;
  animation: clock 60s steps(60, end) infinite;
}

@keyframes clock {
  to {
    transform: rotate(360deg);
  }
}
